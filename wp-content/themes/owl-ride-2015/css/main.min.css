/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}body{cursor:default}img,media,svg{max-width:100%;height:auto}figure{margin:0}nav ul{list-style:none}a{outline:0}.container{max-width:1200px;margin-left:auto;margin-right:auto;position:relative}.container:after{content:" ";display:block;clear:both}.main-content .container{padding:0 130px 0 230px}html{font-family:"proxima-nova",Verdana,Tahoma,Helvetica Neue,Arial,sans-serif;font-size:100%;line-height:1.5}body{color:#d5c8a8;-webkit-text-size-adjust:none;-moz-text-size-adjust:none;-ms-text-size-adjust:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-size:1.125rem}h1,h2,h3,h4{margin:0;line-height:1}h1{font-family:Georgia,Times,Times New Roman,serif;line-height:1.2;font-size:3em;text-transform:uppercase;margin:40px 20px}.page-title{font-family:"proxima-nova",Verdana,Tahoma,Helvetica Neue,Arial,sans-serif;line-height:1;font-size:3em;font-weight:100;text-align:center}@media (min-width: 992px){.page-title{margin:140px 0}}h3{font-size:2.875em;font-style:italic;font-weight:400;line-height:1.3}@media (min-width: 992px){h3{font-size:4.75em;line-height:1.5}}h3 span{display:block;font-family:Georgia,Times,Times New Roman,serif;font-size:1.1875rem;text-transform:uppercase;font-style:normal;line-height:1}@media (min-width: 992px){h3 span{font-size:1.6875rem}}.hr{background-color:#d5c8a8;height:1px;margin-bottom:60px}p{margin:0 0 1.875rem 0}a{text-decoration:none;color:inherit;border-bottom:1px solid;-webkit-transition:border 0.15s;transition:border 0.15s}a:hover{border-color:transparent}.container__nav{float:right;padding:30px 0}.main-nav{display:none}@media (min-width: 992px){.main-nav{display:block}}.menu{padding:0;text-align:center;word-spacing:-1em;display:table;width:100%;margin:20px 10px;padding:0}.menu li{display:inline-block;word-spacing:0}.menu a{display:block;font-size:0.875em;font-weight:600;text-decoration:none;color:#d5c8a8;text-transform:uppercase;border-color:transparent}.menu a:hover{border-color:#d5c8a8}.menu li{margin-right:18px}.menu li:last-child{margin-right:0}.btn{display:inline-block;text-decoration:none}.btn--social{text-indent:-999em;width:34px;height:34px;border:none;background-position:center center;margin-right:8px}.btn--social:last-child{margin-right:0}header{background-color:#132a33}header>container::after{clear:both;content:"";display:table}.logo{display:block;max-width:300px;padding:10px 30px;background-color:#132a33;border-radius:46%;border:none}.container__logo{position:absolute;left:0;top:10px}footer{text-align:center;padding:80px 0 60px 0}.email{font-size:1.3125em;text-transform:uppercase}.social{margin-left:30px}body{background-color:#0f2027}.main,.sponsors{background-color:#132a33}.article__header{max-height:310px;margin-bottom:104px;overflow:hidden;background-size:cover;background-position:center center}

/*# sourceMappingURL=data:application/json;base64, */